{"version":3,"file":"static/js/291.24216385.chunk.js","mappings":"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","sources":["services/api.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Home/Home.styled.js","components/CharatersItem/CharatersItem.styled.js","components/CharatersItem/CharatersItem.jsx","pages/Home/Home.jsx","helpers/getVisibleContacts.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiInstance = axios.create({\n    baseURL: 'https://rickandmortyapi.com/api/character',\n    params: {\n        // api_key: 'e09f06c48afcb3ebfd8a25b0b6965d1e',\n        // language: 'en-US',\n        // page: `${page}`,\n    },\n});\n\nasync function fetchCharaters() {\n    const response = await apiInstance.get();\n     \n    const charaters = response.data.results;\n\n    if (!charaters.length) {\n        throw new Error(`Sorry, there are no charaters.`)\n    }\n\n    return charaters;\n};\n\nconst api = {\n    fetchCharaters,\n\n};\n\nexport default api;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    position: relative;\n    padding-top: 32px;\n    margin-bottom: 32px;\n    color: ${p => p.theme.colors.placeholder};\n`;\n\nexport const FieldFilter = styled.label`\n    width: 100%;\n`;\n\nexport const InputFilter = styled.input`\n    padding: 16px 16px 16px 48px;\n    width: 100%;\n    font: inherit;\n    border: ${p => p.theme.borders.normal};\n    border-radius: ${p => p.theme.radii.filter};\n    outline: none;\n    font-size: ${p => p.theme.fontSizes.s};\n    \n    color: ${p => p.theme.colors.mainText};\n    background-color: inherit;\n    \n    ::placeholder {\n        font-size: ${p => p.theme.fontSizes.s};\n        color: ${p => p.theme.colors.placeholder};\n    }\n`;\n\nexport const IconForm = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 18px;\n`;","import { Container, FieldFilter, InputFilter, IconForm } from \"./Filter.styled\";\nimport { theme } from \"constants/theme\";\nimport { FaSearch } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, onChange }) => (\n    <Container>\n        <FieldFilter>\n            <IconForm><FaSearch size={19} color={theme.colors.placeholder} /></IconForm>\n            <InputFilter\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                placeholder=\"Filter by name...\"\n                onChange={onChange}\n            />\n        </FieldFilter>\n    </Container>\n); \n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};","import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const CharatersList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 32px;\n\n  ${theme.mq.desktop} {\n    gap: 24px 20px;\n  }\n`;","import styled from \"styled-components\";\n\nexport const CharatersCard = styled.li`\n    height: 308px;\n    border-radius: ${p => p.theme.radii.normal};\n    overflow: hidden;\n    box-shadow: ${p => p.theme.shadow};\n    \n    transform: scale(1);\n    transition: ${p => p.theme.transition};\n\n    &:hover,\n    &:focus{\n        transform: scale(1.05);\n    };\n`;\n\nexport const CharatersImg = styled.img`\n  /* width: 100%; */\n  height: 232px;\n  object-fit: cover;\n`;\n\nexport const CharatersInfo = styled.div`\n  padding: 12px 16px;\n`;\n\nexport const CharatersTitle = styled.h3`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const CharatersText = styled.p`\n  letter-spacing: 0.15px;\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { CharatersCard, CharatersImg, CharatersInfo, CharatersTitle, CharatersText } from \"./CharatersItem.styled\";\n\nexport const CharatersItem = ({ id, image, name, species}) => {\n    const { pathname, search } = useLocation();\n    const fromPage = `${pathname}${search}`;\n\n    return (\n        <CharatersCard>\n            <Link to={`/${id}`} state={{from: fromPage}}>\n                <CharatersImg src={image} alt={name} width=\"312px\" height=\"232px\"/>\n                <CharatersInfo>\n                    <CharatersTitle>{name}</CharatersTitle>\n                    <CharatersText>{species}</CharatersText>\n                </CharatersInfo>\n            </Link>\n        </CharatersCard>\n    );\n};\n\nCharatersItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n}","import { useState, useEffect } from \"react\";\nimport API from 'services/api';\nimport { Helmet } from 'react-helmet';\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { CharatersList } from \"./Home.styled\";\nimport { CharatersItem } from \"components/CharatersItem/CharatersItem\";\nimport { getVisibleContacts } from \"helpers/getVisibleContacts\";\n\nconst Home = () => {\n  const [charaters, setCharaters] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    setIsLoading(true);\n    getCharaters();\n\n    async function getCharaters() {\n      try {\n        const fetchCharaters = await API.fetchCharaters();\n        console.log(fetchCharaters);\n        setCharaters(fetchCharaters);\n\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      };\n    };\n  }, []);\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleCharaters = getVisibleContacts(charaters, filter);\n\n  return (\n    <main>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n\n      <Filter filter={filter} onChange={changeFilter} />\n\n      {isLoading && <Loader />} \n\n      <CharatersList>\n        {visibleCharaters.map(({ id, image, name, species }) => (\n          <CharatersItem \n            key={id}\n            id={id}\n            image={image}\n            name={name} \n            species={species}\n          />\n        ))}\n      </CharatersList>\n    </main>\n  );\n};\n\nexport default Home;","export const getVisibleContacts = (charaters, filter) => {\n    console.log(\"Not memoized!\");\n  const normalizedFilter = filter.toLowerCase();\n\n  return charaters.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\n//TODO: useMemo"],"names":["apiInstance","axios","baseURL","params","fetchCharaters","get","response","charaters","data","results","length","Error","api","Container","styled","p","theme","colors","placeholder","FieldFilter","InputFilter","borders","normal","radii","filter","fontSizes","s","mainText","IconForm","Filter","onChange","size","color","type","name","value","CharatersList","CharatersCard","shadow","transition","CharatersImg","CharatersInfo","CharatersTitle","l","fontWeights","medium","CharatersText","CharatersItem","id","image","species","useLocation","pathname","search","fromPage","to","state","from","src","alt","width","height","useState","setCharaters","isLoading","setIsLoading","setFilter","useEffect","API","console","log","getCharaters","visibleCharaters","normalizedFilter","toLowerCase","includes","getVisibleContacts","Helmet","e","currentTarget","Loader","map"],"sourceRoot":""}