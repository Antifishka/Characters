{"version":3,"file":"static/js/821.f05832c3.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home/Home.styled.js","hooks/useMediaQuery.js","components/CharactersItem/CharactersItem.styled.js","components/CharactersItem/CharactersItem.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","pages/Home/Home.jsx","hooks/useLocalStorage.js","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const Container = styled.div`\n    position: relative;\n    margin-bottom: 32px;\n    color: ${p => p.theme.colors.placeholder};\n\n    ${theme.mq.desktop} {\n        margin-bottom: 61px;\n    }\n`;\n\nexport const FieldFilter = styled.label`\n    width: 100%;\n`;\n\nexport const InputFilter = styled.input`\n    padding: 16px 16px 16px 48px;\n    width: 100%;\n    font: inherit;\n    border: ${p => p.theme.borders.input};\n    border-radius: ${p => p.theme.radii.filter};\n    outline: none;\n    font-size: ${p => p.theme.fontSizes.s};\n    \n    color: ${p => p.theme.colors.mainText};\n    background-color: inherit;\n    \n    ::placeholder {\n        font-size: ${p => p.theme.fontSizes.s};\n        color: ${p => p.theme.colors.placeholder};\n    }\n`;\n\nexport const IconForm = styled.div`\n    position: absolute;\n    bottom: 14px;\n    left: 18px;\n`;","// import debounce from 'lodash.debounce';\nimport { Container, FieldFilter, InputFilter, IconForm } from \"./Filter.styled\";\nimport { theme } from \"constants/theme\";\nimport { FaSearch } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, onChange }) => {\n    // const debouncedOnChange = debounce(onChange, 500);\n\n    return (\n        <Container>\n            <FieldFilter>\n                <IconForm><FaSearch size={19} color={theme.colors.placeholder} /></IconForm>\n                <InputFilter\n                    type=\"text\"\n                    name=\"filter\"\n                    value={filter}\n                    placeholder=\"Filter by name...\"\n                    onChange={onChange}\n                />\n            </FieldFilter>\n        </Container>\n    );\n}    \n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0; \n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n`;","import { ColorRing } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nexport const Loader = () => (\n  <Container>\n    <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#c9fa0d', '#09b294', '#097763', '#09b294', '#c9fa0d']}\n    />\n  </Container>\n);","import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const CharactersList = styled.ul`\n  /* display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 32px; */\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n\n  ${theme.mq.desktop} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 24px 20px;\n  }\n`;","import { useMediaQuery } from 'react-responsive';\nimport { breakpoints } from 'constants/theme';\n\nexport const useBreakpoints = () => {\n  const onlyMobile = useMediaQuery({ query: `(max-width: ${+breakpoints[1] - 0.02}px)` });\n  const isDesktop = useMediaQuery({ query: `(min-width: ${breakpoints[1]}px)` });\n\n    return {\n        onlyMobile,\n        isDesktop,\n    };\n};","import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const CharactersCard = styled.li`\n  height: 308px;\n  border-radius: ${p => p.theme.radii.normal};\n  overflow: hidden;\n  box-shadow: ${p => p.theme.shadow};\n    \n  transform: scale(1);\n  transition: ${p => p.theme.transition};\n\n  &:hover,\n  &:focus{\n    transform: scale(1.05);\n  };\n\n  ${theme.mq.desktop} {\n    flex-basis: calc((100% - 60px) / 4);\n    height: 244px;\n  }  \n`;\n\nexport const CharactersImg = styled.img`\n  height: 232px;\n  object-fit: cover;\n\n  ${theme.mq.desktop} {\n    height: 168px;\n  }\n`;\n\nexport const CharactersInfo = styled.div`\n  padding: 12px 16px;\n`;\n\nexport const CharactersTitle = styled.h3`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.5;\n  letter-spacing: 0.15px;\n`;\n\nexport const CharactersText = styled.p`\n  letter-spacing: 0.15px;\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { useBreakpoints } from \"hooks/useMediaQuery\";\nimport { CharactersCard, CharactersImg, CharactersInfo, CharactersTitle, CharactersText } from \"./CharactersItem.styled\";\n\nexport const CharactersItem  = ({ id, image, name, species}) => {\n    const { pathname, search } = useLocation();\n    const fromPage = `${pathname}${search}`;\n\n    const { isDesktop } = useBreakpoints();\n\n    return (\n        <CharactersCard>\n            <Link to={`/${id}`} state={{from: fromPage}}>\n                <CharactersImg\n                    src={image}\n                    alt={name}\n                    width={isDesktop ? \"240px\" : \"312px\"} />\n                <CharactersInfo>\n                    <CharactersTitle>{name}</CharactersTitle>\n                    <CharactersText>{species}</CharactersText>\n                </CharactersInfo>\n            </Link>\n        </CharactersCard>\n    );\n};\n\nCharactersItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n}","import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const Container = styled.div`\n    padding-top: 92px;\n    margin-bottom: 32px;\n\n    ${theme.mq.desktop} {\n        margin-bottom: 16px;\n    } \n`;\n\nexport const Img = styled.img`\n    margin: 0 auto;\n`;","import { Container, Img } from \"components/Title/Title.styled\";\nimport { useBreakpoints } from \"hooks/useMediaQuery\";\nimport imgMob from \"components/images/rick&morty_mob.png\";\nimport imgDes from \"components/images/rick&morty_des.png\";\n\nexport const Title = () => {\n    const { isDesktop } = useBreakpoints();\n\n    return (\n        <Container>\n            <Img srcSet={isDesktop ? imgDes : imgMob }\n                alt=\"rick&morty_logo\"\n                width={isDesktop ? \"600px\" : \"312px\"}\n                loading=\"lazy\" />\n        </Container>\n    );\n};","import { useState, useEffect, useMemo } from \"react\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\nimport API from 'services/api';\nimport { Helmet } from 'react-helmet';\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { CharactersList } from \"./Home.styled\";\nimport { CharactersItem } from \"components/CharactersItem/CharactersItem\";\nimport { Title } from \"components/Title/Title\";\n\nconst Home = () => {\n  const [characters, setCharacters] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filter, setFilter] = useLocalStorage('filter', []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getCharaters();\n\n    async function getCharaters() {\n      try {\n        const fetchCharacters = await API.fetchCharaters();\n        console.log(fetchCharacters);\n        setCharacters(fetchCharacters);\n\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      };\n    };\n  }, []);\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n    console.log(\"filter\", e.currentTarget.value)\n  };\n\n  const sortedCharacters = [...characters].sort((first, second) =>\n    first.name.localeCompare(second.name));\n\n  const visibleCharacters = useMemo(() => {\n    console.log(\"Now memoized!\");\n    const normalizedFilter = filter.toLowerCase();\n\n    return sortedCharacters.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }, [filter, sortedCharacters]);\n\n  return (\n    <main>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n\n      <Title />\n\n      <Filter filter={filter} onChange={changeFilter} />\n\n      {isLoading && <Loader />} \n\n      <CharactersList>\n        {visibleCharacters.map(({ id, image, name, species }) => (\n          <CharactersItem \n            key={id}\n            id={id}\n            image={image}\n            name={name} \n            species={species}\n          />\n        ))}\n      </CharactersList>\n    </main>\n  );\n};\n\nexport default Home;","import { useState, useEffect } from \"react\";\n\nexport default function useLocalStorage(key, dafaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? dafaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};","import axios from \"axios\";\n\nconst apiInstance = axios.create({\n    baseURL: 'https://rickandmortyapi.com/api/character',\n    params: {\n        // api_key: 'e09f06c48afcb3ebfd8a25b0b6965d1e',\n        // language: 'en-US',\n        // page: `${page}`,\n    },\n});\n\nasync function fetchCharaters() {\n    const response = await apiInstance.get();\n     \n    const charaters = response.data.results;\n\n    if (!charaters.length) {\n        throw new Error(`Sorry, there are no charaters.`)\n    }\n\n    return charaters;\n};\n\nasync function fetchCharaterById(id) {\n    const { data } = await apiInstance.get(`/${id}`);\n    \n    return data;\n}\n\nconst api = {\n    fetchCharaters,\n    fetchCharaterById,\n};\n\nexport default api;"],"names":["Container","styled","p","theme","colors","placeholder","FieldFilter","InputFilter","borders","input","radii","filter","fontSizes","s","mainText","IconForm","Filter","onChange","size","color","type","name","value","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","CharactersList","useBreakpoints","onlyMobile","useMediaQuery","query","breakpoints","isDesktop","CharactersCard","normal","shadow","transition","CharactersImg","CharactersInfo","CharactersTitle","l","fontWeights","medium","CharactersText","CharactersItem","id","image","species","useLocation","pathname","search","fromPage","to","state","from","src","alt","Img","Title","srcSet","imgDes","imgMob","loading","useState","characters","setCharacters","isLoading","setIsLoading","key","dafaultValue","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","useLocalStorage","setFilter","API","fetchCharacters","console","log","getCharaters","sortedCharacters","sort","first","second","localeCompare","visibleCharacters","useMemo","normalizedFilter","toLowerCase","includes","Helmet","e","currentTarget","map","apiInstance","axios","baseURL","params","fetchCharaters","get","response","charaters","data","results","length","Error","fetchCharaterById","api"],"sourceRoot":""}