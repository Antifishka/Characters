{"version":3,"file":"static/js/578.5ef5374e.chunk.js","mappings":"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","sources":["pages/Details/Details.styled.js","components/BackButton/BackButton.styled.js","components/BackButton/BackButton.jsx","components/CharacterInfoList/CharacterInfoList.styled.js","components/CharacterInfoList/CharacterInfoList.jsx","pages/Details/Details.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const CharacterImg = styled.img`\n  box-sizing: content-box;\n  border-radius: 50%;\n  border: 5px solid #F2F2F7;\n  overflow: hidden;\n  margin: 0 auto 34px auto;\n\n  ${theme.mq.desktop} {\n    width: 300px;\n    margin-bottom: 16px;\n  } \n`;\n\nexport const CharacterName = styled.h2`\n  margin-bottom: 34px;\n\n  font-size: ${p => p.theme.fontSizes.xl};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  line-height: 1.2;\n  text-align: center;\n\n  color: ${p => p.theme.colors.mainTextDetails};\n\n  ${theme.mq.desktop} {\n    margin-bottom: 48px;\n\n    font-size: ${p => p.theme.fontSizes.xxl};\n  } \n`;\n\nexport const Title = styled.p`\n  margin-bottom: 16px;\n\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.2;\n  letter-spacing: 0.15px;\n\n  color: #8E8E93;\n\n  ${theme.mq.desktop} {\n    margin-bottom: 48px;\n    \n    text-align: center;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { theme } from \"constants/theme\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding-top: 23px;\n  margin-bottom: 78px;\n\n  font-family: ${p => p.theme.fonts.karla};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.2;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.colors.black};\n\n  transition: ${p => p.theme.transition};\n          \n  :hover{\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${theme.mq.desktop} {\n    margin-bottom: 31px;\n  } \n`;","import { useLocation } from \"react-router-dom\";\nimport { MdArrowBack} from \"react-icons/md\";\nimport { StyledLink } from \"./BackButton.styled\";\nimport PropTypes from 'prop-types';\n\nexport const BackButton = ({ children }) => {\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n    console.log(backLinkHref, \"backLinkHref\");\n\n    return <StyledLink to={backLinkHref}>\n        <MdArrowBack size={26} />\n        {children}\n    </StyledLink>\n};\n\nBackButton.propTypes = {\n    children: PropTypes.node,\n}","import styled from \"styled-components\";\nimport { theme } from \"constants/theme\";\n\nexport const CharacterList = styled.ul`\n    margin: 0 16px 32px 16px;\n\n    ${theme.mq.desktop} {\n        width: 413px;\n        margin: 0 auto 32px auto;\n    }\n`;\n\nexport const CharacterItem = styled.li`\n    padding: 9px 0 12px 0;\n\n    border-bottom: ${p => p.theme.borders.normal};\n`;\n\nexport const CharacterProp = styled.h4`\n    font-size: ${p => p.theme.fontSizes.s};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    letter-spacing: 0.15px;\n\n    color: ${p => p.theme.colors.mainTextDetails};\n`;\n\nexport const CharacterText = styled.p`\n    line-height: 1.4;\n    letter-spacing: 0.25px;\n\n    color: ${p => p.theme.colors.secondaryTextDetails};\n`;","import { CharacterList, CharacterItem, CharacterProp, CharacterText } from './CharacterInfoList.styled';\nimport PropTypes from 'prop-types';\n\nexport const CharacterInfoList = ({ gender, status, species, origin, type }) => {\n    const infoCharacter = [\n        { prop: 'Gender', value: gender || 'Unknown' },\n        { prop: 'Status', value: status || 'Unknown'},\n        { prop: 'Specie', value: species || 'Unknown' },\n        { prop: 'Origin', value: origin?.name || 'Unknown' },\n        { prop: 'Type', value: type || 'Unknown' },\n    ]\n    \n    return (\n        <CharacterList>\n            {infoCharacter?.map(({ prop, value }) => (\n                <CharacterItem key={prop}>\n                    <CharacterProp>{prop}</CharacterProp>\n                    <CharacterText>{value}</CharacterText>\n                </CharacterItem>\n            ))}\n        </CharacterList>\n    )\n};\n\nCharacterInfoList.propTypes = {\n    gender: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n    origin: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.string.isRequired,\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport API from \"services/api\";\nimport { Helmet } from 'react-helmet';\nimport {  CharacterImg, CharacterName, Title } from \"./Details.styled\";\nimport { BackButton } from \"components/BackButton/BackButton\";\nimport { CharacterInfoList } from \"components/CharacterInfoList/CharacterInfoList\";\n\nconst CharacterDetails = () => {\n  const { characterId } = useParams();\n  const [character, setCharacter] = useState([]);\n  \n  useEffect(() => {\n    getMovieById();\n\n    async function getMovieById() {\n      try {\n        const fetchCharacter = await API.fetchCharaterById(Number(characterId));\n        console.log(fetchCharacter, \"character's datails\");\n        setCharacter(fetchCharacter);\n\n      } catch (error) {\n        console.log(error);\n      };\n    };\n    }, [characterId]);\n\n  if (!character) {\n    return null;\n  };\n  \n  const { image, name, gender, status, species, origin, type } = character;\n  \n  return (\n    <main>\n      <Helmet>\n        <title>Details</title>\n      </Helmet>\n              \n      <BackButton>Go back</BackButton>\n\n      <CharacterImg src={image} alt={name} width=\"150px\" />\n      <CharacterName>{name}</CharacterName>\n      <Title>Informations</Title>\n      <CharacterInfoList\n        gender={gender}\n        status={status}\n        species={species}\n        origin={origin}\n        type={type}\n      />\n    </main>\n  );\n};\n\nexport default CharacterDetails;","import axios from \"axios\";\nconst apiInstance = axios.create({\n        baseURL: 'https://rickandmortyapi.com/api/character',\n    });\n\nasync function fetchCharaters(page) {\n    const { data } = await apiInstance.get(`/?page=${page}`);\n     \n    const charaters = data.results;\n\n    if (!charaters.length) {\n        throw new Error(`Sorry, there are no charaters.`)\n    }\n\n    return data;\n};\n\nasync function fetchCharaterById(id) {\n    const { data } = await apiInstance.get(`/${id}`);\n    \n    return data;\n}\n\nconst api = {\n    fetchCharaters,\n    fetchCharaterById,\n};\n\nexport default api;"],"names":["CharacterImg","styled","theme","CharacterName","p","fontSizes","xl","fontWeights","normal","colors","mainTextDetails","xxl","Title","l","medium","StyledLink","Link","fonts","karla","bold","m","black","transition","accent","BackButton","children","backLinkHref","useLocation","state","from","console","log","to","size","CharacterList","CharacterItem","borders","CharacterProp","s","CharacterText","secondaryTextDetails","CharacterInfoList","gender","status","species","origin","type","infoCharacter","prop","value","name","map","characterId","useParams","useState","character","setCharacter","useEffect","API","Number","fetchCharacter","getMovieById","image","Helmet","src","alt","width","apiInstance","axios","baseURL","fetchCharaters","page","get","data","results","length","Error","fetchCharaterById","id","api"],"sourceRoot":""}